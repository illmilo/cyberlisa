"""activity now

Revision ID: c7e8a043a7ee
Revises: e1710c05b07e
Create Date: 2025-06-21 18:00:59.765380

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c7e8a043a7ee'
down_revision: Union[str, Sequence[str], None] = 'e1710c05b07e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('activitys', sa.Column('description', sa.String(), nullable = True))
    
    # Заполняем существующие записи значением по умолчанию
    op.execute("UPDATE activitys SET description = 'Default description' WHERE description IS NULL")
    
    # Делаем столбец NOT NULL
    op.alter_column('activitys', 'description', nullable=False)
    
    op.drop_constraint(op.f('employees_activity_id_fkey'), 'employees', type_='foreignkey')
    op.create_foreign_key(None, 'employees', 'activitys', ['activity_now'], ['id'])
    op.drop_column('employees', 'activity_id')
    op.drop_column('employees', 'activities')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('employees', sa.Column('activities', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('employees', sa.Column('activity_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.create_foreign_key(op.f('employees_activity_id_fkey'), 'employees', 'activitys', ['activity_id'], ['id'])
    op.drop_column('activitys', 'description')
    # ### end Alembic commands ###
